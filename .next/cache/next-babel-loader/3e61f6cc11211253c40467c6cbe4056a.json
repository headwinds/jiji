{"ast":null,"code":"\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst {\n  RESTDataSource\n} = require(\"apollo-datasource-rest\");\n\nclass ScoutAPI extends RESTDataSource {\n  constructor() {\n    super();\n    this.baseURL = \"https://scout.now.sh/api/\";\n  }\n\n  willSendRequest(request) {\n    if (request.body && typeof request.body === \"object\") {\n      request.body = _objectSpread({}, request.body);\n    }\n  }\n\n  async getGold(id) {\n    return this.get(`gold/${id}`);\n  }\n\n  async getGolds(limit = 10) {\n    const data = await this.get(\"gold\");\n    console.log(data);\n    return data.golds;\n  }\n\n  async postGold(goldInput) {\n    const data = await this.post(\"gold\", goldInput);\n    console.log(\"post gold response: \", data);\n    return data;\n  }\n\n}\n\nmodule.exports = ScoutAPI; // https://github.com/apollographql/apollo-server/tree/main/packages/apollo-datasource-rest","map":null,"metadata":{},"sourceType":"script"}