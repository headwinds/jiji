{"ast":null,"code":"const cors = require(\"micro-cors\")(); // highlight-line\n\n\nconst {\n  ApolloServer,\n  gql\n} = require(\"apollo-server-micro\");\n\nconst {\n  ScoutAPI\n} = require(\"../src/dataSources\");\n\nconst {\n  CabinQuestAPI\n} = require(\"../src/dataSources\"); // root\n\n\nconst rootTypeDefs = require(\"../src/models/root/root-type\");\n\nconst rootResolvers = require(\"../src/models/root/root-resolvers\"); // tree\n\n\nconst treeTypeDefs = require(\"../src/models/tree/tree-type\");\n\nconst treeResolvers = require(\"../src/models/tree/tree-resolvers\"); // gold\n\n\nconst goldTypeDefs = require(\"../src/models/gold/gold-type\");\n\nconst goldResolvers = require(\"../src/models/gold/gold-resolvers\");\n\nconst typeDefs = [rootTypeDefs, goldTypeDefs, treeTypeDefs];\nconst resolvers = [rootResolvers, goldResolvers, treeResolvers];\n\nconst dataSources = () => ({\n  ScoutAPI: new ScoutAPI(),\n  CabinQuestAPI: new CabinQuestAPI()\n});\n\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers,\n  dataSources,\n  playground: true,\n  introspection: true\n});\nconst handler = apolloServer.createHandler({\n  path: \"/api\"\n});\nmodule.exports = cors((req, res) => req.method === \"OPTIONS\" ? res.end() : handler(req, res));\n/*\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nexport default apolloServer.createHandler({ path: \"/api\" });\n*/","map":null,"metadata":{},"sourceType":"script"}